{"version":3,"file":"list-52549d83.js","sources":["../../src/components/performanceComponents/wxPerfEchart.vue","../../src/views/page/list.vue","../../src/api/request/index.ts"],"sourcesContent":["<template>\n  <div class=\"flex flex-row justify-between\" style=\"width: 100%\">\n    <!-- <el-statistic title=\"白屏时间\" :value=\"ntFormat('FP')\">\n      <template #suffix>ms</template>\n    </el-statistic>\n    <el-statistic title=\"DOM Ready\" :value=\"ntFormat('FCP')\">\n      <template #suffix>ms</template>\n    </el-statistic>\n    <el-statistic title=\"首次可交互时间\" :value=\"ntFormat('LCP')\">\n      <template #suffix>ms</template>\n    </el-statistic> -->\n  </div>\n  <Echarts :options=\"navigationEchart\"></Echarts>\n</template>\n\n<script lang=\"ts\">\nimport Echarts from \"@/components/echarts/index.vue\";\nimport { computed } from \"vue\";\nexport default {\n  components: {\n    Echarts,\n  },\n  props: {\n    options: {\n      type: Object,\n      required: true,\n    },\n  },\n  name: \"wxPerfEchart\",\n  setup(props) {\n    const ntFormat = (label: string) => {\n      // 默认去NT里时间\n      let row: any = props?.options;\n      if (!row || !Object.keys(row).length) return 0;\n      let time = row.NT[label] || 0;\n      const FP = row.FP || {}; // 白屏时间\n      const FCP = row.FCP || {}; //灰屏时间\n      const LCP = row.LCP || {}; \n      const NT = row.NT || {}; \n      if (label == \"FCP\" && FCP.startTime) {\n        time = FCP.startTime - NT.appLaunchStartTime;\n      }\n      if (label == \"FP\" && Object.keys(FP).length) {\n        time = FP.startTime - NT.appLaunchStartTime;\n      }\n      if (label == \"LCP\" && LCP.startTime) {\n        time = LCP.startTime - NT.appLaunchStartTime;\n      }\n      return Number((time || 0).toFixed(2));\n    };\n\n    /**\n     *  appLaunch: 0, // 小程序启动耗时。\n\t *\tappLaunchStartTime: '',\n\t *\troute: 0, // 路由耗时\n \t *\trouteStartTime: '',\n\t *\tfirstRender: 0, // 页面首次渲染耗时\n\t *\tfirstRenderStartTime: '',\n\t *\tscript: 0, // 逻辑层 JS 代码注入耗时\n\t *\tscriptStartTime: '',\n\t *\tloadPackage: 0, // 代码包下载耗时。(entryType: loadPackage)\n\t *\tloadPackageStartTime: '',\n     * @description: 性能指标图\n     * @param {*} computed\n     * @return {*}\n     */\n    const navigationEchart = computed(() => {\n      const NT: any = props.options?.NT || {};\n      if (!NT || !Object.keys(NT).length) return {};\n      const axisData = [\n        \"firstRender\",\n        \"script\",\n        \"route\",\n        \"appLaunch\",\n        \"loadPackage\",\n      ];\n\n      const seriesData: any[] = [];\n      const yAxisLeftData: any[] = [\n        \"页面渲染\",\n        \"JS注入\",\n        \"路由\",\n        \"小程序启动\",\n        \"代码包下载\",\n      ];\n      const yAxisRightData: any[] = [];\n      axisData.forEach((item, index) => {\n        const value = (NT[item] || 0).toFixed(2);\n        yAxisRightData.push(`${value}ms`);\n        const data: any = {\n          name: item,\n          type: \"bar\",\n          stack: \"Total\",\n          label: {\n            show: true,\n            position: \"right\",\n          },\n          data: [],\n        };\n        // 重置 性能节点数据\n        for (let i = 0, len = axisData.length; i < len; i++) {\n          if (index == i) {\n            data.data.push(value);\n          } else {\n            data.data.push(\"-\");\n          }\n        }\n        seriesData.push(data);\n      });\n      const {\n        // firstRender = 0,\n        script = 0,\n        route = 0,\n        loadPackage = 0,\n        appLaunch = 0\n      }: any = NT;\n      // TODO 待优化\n      const defaultSeriesData: any[] = [\n        // `${appLaunch + loadPackage + route + script + firstRender}`,\n        `${appLaunch + loadPackage + route + script}`,\n        `${appLaunch + loadPackage + route}`,\n        `${appLaunch + loadPackage}`,\n        `${loadPackage}`,\n      ];\n\n      const option = {\n        tooltip: {\n          trigger: \"axis\",\n          axisPointer: {\n            type: \"shadow\",\n          },\n          formatter: function (params: any) {\n            for (let i = 1, len = params.length; i < len; i++) {\n              let { name, value, seriesName, color } = params[i];\n              if (value !== \"-\") {\n                return `${name}</br><span style=\"display:flex; align-items: center;\">\n\t\t\t\t\t<i style=\"display:block;margin-right:5px;border-radius:50%;width:10px;height:10px;left:5px;background-color:${color}\"></i>${seriesName}:\n\t\t\t\t\t<i style=\"padding-left: 30px;\">${value}</i>\n\t\t\t\t</span>`;\n              }\n            }\n          },\n        },\n        xAxis: {\n          type: \"value\",\n          show: false,\n          axisLine: {\n            show: false,\n          },\n          axisTick: {\n            show: false,\n          },\n          splitLine: {\n            lineStyle: {\n              type: \"dotted\",\n            },\n          },\n        },\n        yAxis: [\n          {\n            axisLine: {\n              show: false,\n            },\n            axisTick: {\n              show: false,\n            },\n            splitLine: {\n              lineStyle: {\n                type: \"dotted\",\n              },\n            },\n            type: \"category\",\n            data: yAxisLeftData,\n          },\n          {\n            axisLine: {\n              show: false,\n            },\n            axisTick: {\n              show: false,\n            },\n            splitLine: {\n              lineStyle: {\n                type: \"dotted\",\n              },\n            },\n            type: \"category\",\n            data: yAxisRightData,\n          },\n        ],\n        seriesColorReset: false,\n        series: [\n          {\n            name: \"Placeholder\",\n            type: \"bar\",\n            stack: \"Total\",\n            silent: true,\n            itemStyle: {\n              borderColor: \"transparent\",\n              color: \"transparent\",\n            },\n            emphasis: {\n              itemStyle: {\n                borderColor: \"transparent\",\n                color: \"transparent\",\n              },\n            },\n            data: defaultSeriesData,\n          },\n          ...seriesData,\n        ],\n      };\n      // console.log(\"option---\", option);\n      return option;\n    });\n\n    return {\n      ntFormat,\n      navigationEchart,\n    };\n  },\n};\n</script>\n","<template>\n  <div class=\"app-container\">\n    <el-card class=\"search-wrapper\">\n      <el-form ref=\"searchFormRef\" :inline=\"true\" :model=\"searchData\">\n        <el-form-item prop=\"simpleUrl\" label=\"页面链接\">\n          <el-input\n            v-model=\"searchData.simpleUrl\"\n            placeholder=\"请输入带*的页面链接\"\n          />\n        </el-form-item>\n        <el-form-item prop=\"phone\" label=\"日期\">\n          <el-date-picker\n            v-model=\"searchData.data\"\n            type=\"datetimerange\"\n            range-separator=\"-\"\n            start-placeholder=\"开始时间\"\n            end-placeholder=\"结束时间\"\n          />\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"init\">查询</el-button>\n          <el-button @click=\"resetSearch\">重置</el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n    <section class=\"custom-main-contents visit-left-contents\">\n      <el-card class=\"flex flex-1 flex-column visit-left-list\">\n        <template #header>\n          <div class=\"card-header\">\n            <span>访问页面</span>\n            <span>总PV: {{ data.pvCount }}次</span>\n          </div>\n        </template>\n        <div class=\"flex-1 flex flex-column\">\n          <el-scrollbar>\n            <dl\n              class=\"arco-list-item\"\n              :class=\"{ active: data.activePage == item.simpleUrl }\"\n              v-for=\"(item, index) in data.visitList\"\n              :key=\"index\"\n              @click=\"handleVisitItem(item)\"\n            >\n              <dt>\n                {{ item.simpleUrl }}\n              </dt>\n              <dd class=\"flex align-items-center\">\n                {{ numberFormat(item.pageCount) }}次({{\n                  visitPercent(item.pageCount)\n                }})\n                <el-icon><ArrowRightBold /></el-icon>\n              </dd>\n            </dl>\n          </el-scrollbar>\n          <div class=\"pager-wrapper mt20\">\n            <el-pagination\n              background\n              :layout=\"paginationData.layout\"\n              :page-sizes=\"paginationData.pageSizes\"\n              :total=\"paginationData.total\"\n              :page-size=\"paginationData.pageSize\"\n              :currentPage=\"paginationData.currentPage\"\n              @size-change=\"handleSizeChange\"\n              @current-change=\"handleCurrentChange\"\n            />\n          </div>\n        </div>\n      </el-card>\n      <div class=\"visit-right-contents flex-1 flex flex-column\">\n        <el-scrollbar>\n          <!-- 健康数据 -->\n          <el-card>\n            <template #header>\n              <div class=\"card-header\">\n                <span>健康概览</span>\n              </div>\n            </template>\n            <el-tabs class=\"demo-tabs\">\n              <el-tab-pane label=\"pv/uv\">\n                <pageHoursEchart :params=\"hourPvUvParam\" />\n              </el-tab-pane>\n              <el-tab-pane label=\"JS报错\">\n                <JsHoursEchart :params=\"hourJsParam\" />\n              </el-tab-pane>\n              <el-tab-pane label=\"平均性能\" v-if=\"data.project.projectType == 1\">\n                <PerfEchart :options=\"data.perfEchartOPtion\"></PerfEchart>\n              </el-tab-pane>\n              <!-- <el-tab-pane label=\"平均性能\" v-if=\"data.project.projectType == 2\">\n                <WxPerfEchart :options=\"data.perfEchartOPtion\"></WxPerfEchart>\n              </el-tab-pane> -->\n            </el-tabs>\n          </el-card>\n          <!-- 页面js 错误详情 -->\n          <el-card class=\"mt20\">\n            <template #header>\n              <div class=\"card-header\">\n                <span>JS错误聚类</span>\n              </div>\n            </template>\n            <el-table :data=\"data.jsErrorTableData\" border style=\"width: 100%\">\n              <el-table-column prop=\"errorMsg\" label=\"错误内容\" />\n              <el-table-column prop=\"count\" label=\"错误数\" />\n              <el-table-column prop=\"userCount\" label=\"影响用户数\" />\n            </el-table>\n          </el-card>\n          <!-- api 详情 -->\n          <el-card class=\"mt20\">\n            <template #header>\n              <div class=\"card-header\">\n                <span>API详情</span>\n              </div>\n            </template>\n            <div class=\"flex-1 flex flex-column\">\n              <el-table border :data=\"data.tableData\">\n                <el-table-column prop=\"pathName\" label=\"API名称\" align=\"left\" />\n                <el-table-column prop=\"method\" label=\"请求方式\" align=\"center\" />\n                <el-table-column prop=\"count\" label=\"请求次数\" align=\"center\" />\n                <el-table-column prop=\"avgDuration\" label=\"平均耗时（ms）\" align=\"center\" />\n                <el-table-column prop=\"avgDuration\" label=\"请求成功率\" align=\"center\">\n                  <template #default=\"{ row }\">\n                    {{ (row.successCount / row.count).toFixed(2) * 100 }}%\n                  </template>\n                </el-table-column>\n              </el-table>\n            </div>\n          </el-card>\n          <!-- 地理分布 -->\n          <el-card class=\"mt20\">\n            <template #header>\n              <div class=\"card-header\">\n                <span>地理分布</span>\n              </div>\n            </template>\n            <!-- mapOption -->\n            <MapEcharts :ipCregion=\"data.ipcregion\"></MapEcharts>\n          </el-card>\n          <!-- 终端数据 -->\n          <el-card class=\"mt20\">\n            <template #header>\n              <div class=\"card-header\">\n                <span>终端分布</span>\n              </div>\n            </template>\n            <el-tabs class=\"demo-tabs\">\n              <el-tab-pane label=\"系统版本\" v-if=\"data.EchartDatas.os\">\n                <Echarts :options=\"echartData('os')\"></Echarts>\n              </el-tab-pane>\n              <el-tab-pane label=\"浏览设备\" v-if=\"data.EchartDatas.device\">\n                <Echarts :options=\"echartData('device')\"></Echarts>\n              </el-tab-pane>\n              <el-tab-pane label=\"浏览器版本\" v-if=\"data.EchartDatas.browser\">\n                <Echarts :options=\"echartData('browser')\"></Echarts>\n              </el-tab-pane>\n              <el-tab-pane label=\"设备分辨率\" v-if=\"data.EchartDatas.screen\">\n                <Echarts :options=\"echartData('screen')\"></Echarts>\n              </el-tab-pane>\n            </el-tabs>\n          </el-card>\n        </el-scrollbar>\n      </div>\n    </section>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { onMounted, reactive, ref, computed } from \"vue\";\nimport { timeQuantum, numberFormat } from \"@/utils/index\";\nimport { pageGeoDistribution, pageList, pageEchartByUuId } from \"@/api/page\";\nimport { usePagination } from \"@/hooks/usePagination\";\nimport MapEcharts from \"@/components/mapEcharts/index.vue\";\nimport { aggregateErrorByErrorMsg } from \"@/api/js\";\nimport { apiAgregateList } from \"@/api/request/index\"\nimport pageHoursEchart from \"@/components/page/pageHoursEchart.vue\";\nimport JsHoursEchart from \"@/components/jsComponents/jsHoursEchart.vue\";\nimport PerfEchart from \"@/components/performanceComponents/perfEchart.vue\";\nimport WxPerfEchart from \"@/components/performanceComponents/wxPerfEchart.vue\";\nimport { performanceEchartByUrl } from \"@/api/performance\";\nimport Echarts from \"@/components/echarts/index.vue\";\nimport { cloneDeep } from \"lodash\";\n\nexport default {\n  components: {\n    MapEcharts,\n    pageHoursEchart,\n    JsHoursEchart,\n    PerfEchart,\n    WxPerfEchart,\n    Echarts,\n  },\n  setup() {\n    let data = reactive({\n      activePage: \"\", // 访问页面选中\n      pvCount: 0,\n      visitList: <any>[],\n      ipcregion: <any>[], // 地图\n      jsErrorTableData: <any>[], // js错误\n      perfEchartOPtion: <any>[], // 性能\n      project: <any>{},\n      EchartDatas: <any>[], // 分布\n      tableData: <any>[], // pai 数据\n    });\n    const searchData = ref({\n      simpleUrl: \"\",\n      data: timeQuantum({ format: [\"00:00:00\", \"23:59:59\"] }),\n    });\n\n    const { paginationData, handleCurrentChange, handleSizeChange } =\n      usePagination(\n        () => {\n          getPageList();\n        },\n        {\n          layout: \"total, prev, pager, next, jumper\",\n        }\n      );\n\n    // 分页\n    const getPageList = async () => {\n      let param = {\n        simpleUrl: searchData.value.simpleUrl,\n        startTime: searchData.value.data[0],\n        endTime: searchData.value.data[1],\n        page: paginationData.currentPage,\n        pageSize: paginationData.pageSize,\n      };\n      let res = await pageList(param);\n      if (!res.success) {\n        return;\n      }\n      data.pvCount = res.model.pvCount;\n      paginationData.total = res.model.count;\n      data.visitList = res.model.list;\n      // 默认查询第一条数据详情\n      handleVisitItem(data.visitList[0] || {});\n    };\n\n    // 地图数据\n    const getPageGeoDistribution = async () => {\n      const params = {\n        startTime: searchData.value.data[0],\n        endTime: searchData.value.data[1],\n        simpleUrl: data.activePage,\n      };\n      let res = await pageGeoDistribution(params);\n      if (!res.success) {\n        return false;\n      }\n      data.ipcregion = res.model;\n    };\n\n    // js 错误 errorMsg 分组\n    const getAggregateErrorByErrorMsg = async () => {\n      let param = {\n        startTime: searchData.value.data[0],\n        endTime: searchData.value.data[1],\n        simpleUrl: data.activePage,\n      };\n      let res = await aggregateErrorByErrorMsg(param);\n      if (!res.success) {\n        return;\n      }\n      data.jsErrorTableData = res.model;\n    };\n\n    /**\n     * @description: 左侧列表 点击http 点击\n     * @param {*} node\n     * @return {*}\n     */\n    const handleVisitItem = (node: any) => {\n      const { simpleUrl = \"\" } = node;\n      data.activePage = simpleUrl;\n\n      getPageGeoDistribution();\n      getAggregateErrorByErrorMsg();\n      getPerformanceEchartByUrl();\n      getPageEchartByUuId();\n      getAgregateList()\n    };\n\n    // pv/uv 图表\n    const hourPvUvParam = computed(() => {\n      return {\n        startTime: searchData.value.data[0],\n        endTime: searchData.value.data[1],\n        simpleUrl: data.activePage,\n      };\n    });\n\n    // js 图表\n    const hourJsParam = computed(() => {\n      return {\n        data: searchData.value.data,\n        simpleUrl: data.activePage,\n      };\n    });\n\n    // 性能图表\n    const getPerformanceEchartByUrl = async () => {\n      let param = {\n        startTime: searchData.value.data[0],\n        endTime: searchData.value.data[1],\n        simpleUrl: data.activePage,\n      };\n      let res = await performanceEchartByUrl(param);\n      if (!res.success) {\n        return;\n      }\n      data.perfEchartOPtion = res.model;\n      data.project = res.model.project;\n    };\n\n    // 分布图表\n    const getPageEchartByUuId = async () => {\n      let param = {\n        startTime: searchData.value.data[0],\n        endTime: searchData.value.data[1],\n        simpleUrl: data.activePage,\n      };\n      let res = await pageEchartByUuId(param);\n      if (!res.success) {\n        return;\n      }\n      data.EchartDatas = res.model;\n    };\n\n    // 获取api 数据\n    const getAgregateList = async () => {\n      let param = {\n        startTime: searchData.value.data[0],\n        endTime: searchData.value.data[1],\n        simpleUrl: data.activePage,\n      }\n      let res = await apiAgregateList(param)\n      if (!res.success) {\n        return;\n      }\n      data.tableData = res.model\n    }\n\n    // 渲染数据\n    const defaultEchart = {\n      // legend: {\n      //   top: 'bottom'\n      // },\n      toolbox: {\n        show: true,\n        feature: {\n          mark: { show: true },\n          dataView: { show: true, readOnly: false },\n          restore: { show: true },\n          saveAsImage: { show: true },\n        },\n      },\n      series: [\n        {\n          name: \"Nightingale Chart\",\n          type: \"pie\",\n          radius: [20, 100],\n          center: [\"50%\", \"50%\"],\n          roseType: \"area\",\n          itemStyle: {\n            borderRadius: 8,\n          },\n          data: [],\n        },\n      ],\n    };\n\n    /**\n     * @description: echart 渲染数据提取\n     * @param {*} computed\n     * @return {*}\n     */\n    const echartData = computed(() => {\n      return (type: string, EchartModel = data.EchartDatas) => {\n        let Echart: any = cloneDeep(defaultEchart);\n        const nodeData = EchartModel[type];\n        let arr: any = [];\n        nodeData.axisData?.forEach((name: any, index: any) => {\n          arr.push({\n            name,\n            value: nodeData.seriesData[index],\n          });\n        });\n        Echart.series[0].data = arr;\n        return Echart;\n      };\n    });\n\n    /**\n     * @description: 访问占比\n     * @param {*} count\n     * @return {*}\n     */\n    const visitPercent = (count: number) => {\n      return ((count / data.pvCount) * 100).toFixed(2) + \"%\";\n    };\n\n    // 初始化\n    const init = async () => {\n      getPageList();\n    };\n\n    // 重置\n    const resetSearch = async () => {\n      searchData.value = {\n        simpleUrl: \"\",\n        data: timeQuantum({ format: [\"00:00:00\", \"23:59:59\"] }),\n      };\n    };\n\n    onMounted(() => {\n      init();\n    });\n\n    return {\n      data,\n      searchData,\n      resetSearch,\n      init,\n      paginationData,\n      handleCurrentChange,\n      handleSizeChange,\n      visitPercent,\n      numberFormat,\n      handleVisitItem,\n      hourPvUvParam,\n      hourJsParam,\n      echartData,\n    };\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@use \"./style/style.scss\";\n</style>\n","import { request } from \"@/utils/service\";\nimport type * as Api from \"./types/modules\";\n\n/**\n * api 数据\n * @returns\n */\nexport function apiAgregateList(data: Api.ApiAgregateListRequestData) {\n  return request<Api.ApiAgregateListResponseData>({\n    url: \"/adm/api/agregate/list\",\n    method: \"post\",\n    data,\n  });\n}"],"names":["_sfc_main$1","components","Echarts","props","options","type","Object","required","name","setup","ntFormat","label","row","keys","length","time","NT","FP","FCP","LCP","startTime","appLaunchStartTime","Number","toFixed","navigationEchart","computed","_a","axisData","seriesData","yAxisRightData","forEach","item","index","value","push","data","stack","show","position","i","len","script","route","loadPackage","appLaunch","tooltip","trigger","axisPointer","formatter","params","seriesName","color","xAxis","axisLine","axisTick","splitLine","lineStyle","yAxis","seriesColorReset","series","silent","itemStyle","borderColor","emphasis","_hoisted_1","class","_sfc_main","MapEcharts","pageHoursEchart","JsHoursEchart","PerfEchart","WxPerfEchart","_openBlock","_Fragment","reactive","activePage","pvCount","visitList","ipcregion","jsErrorTableData","perfEchartOPtion","project","EchartDatas","tableData","searchData","ref","simpleUrl","timeQuantum","format","paginationData","handleCurrentChange","handleSizeChange","usePagination","layout","getPageList","async","param","endTime","page","currentPage","pageSize","res","pageList","success","model","total","count","list","handleVisitItem","node","pageGeoDistribution","aggregateErrorByErrorMsg","hourPvUvParam","hourJsParam","getPerformanceEchartByUrl","performanceEchartByUrl","getPageEchartByUuId","pageEchartByUuId","getAgregateList","request","url","method","apiAgregateList","defaultEchart","toolbox","feature","mark","dataView","readOnly","restore","saveAsImage","radius","center","roseType","borderRadius","echartData","EchartModel","Echart","cloneDeep","nodeData","arr","init","onMounted","resetSearch","visitPercent","numberFormat","_withScopeId","n","_pushScopeId","_popScopeId","_hoisted_2","_hoisted_5","_hoisted_6","_component_Echarts","_resolveComponent","_createElementBlock","_createVNode","_component_el_card","default","_withCtx","_component_el_form","inline","_component_el_form_item","prop","_component_el_input","modelValue","$setup","_cache","$event","_","_component_el_date_picker","_component_el_button","onClick","header","_createElementVNode","_hoisted_3","_hoisted_4","_component_el_scrollbar","_renderList","_normalizeClass","active","key","_toDisplayString","_hoisted_7","_createTextVNode","pageCount","_component_el_icon","_hoisted_8","_component_el_pagination","background","pageSizes","onSizeChange","_hoisted_9","_component_el_tabs","_component_el_tab_pane","_createBlock","_component_PerfEchart","_component_el_table","border","style","width","_component_el_table_column","_hoisted_13","align","_component_MapEcharts","os","_createCommentVNode","device","browser","screen"],"mappings":"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"}