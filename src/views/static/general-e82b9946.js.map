{"version":3,"file":"general-e82b9946.js","sources":["../../src/store/modules/general.ts"],"sourcesContent":["import { defineStore } from \"pinia\";\nimport { setCookie, getCookie } from \"@/utils/cache/cookies\";\nimport { projectAllList } from \"@/api/project\";\nexport const useGeneralStore = defineStore({\n  id: \"app-general\",\n  state: (): any => ({\n    projectList: <any>getCookie(\"PROJECT_ALL\") ? JSON.parse(getCookie(\"PROJECT_ALL\") || \"[]\") : [], // 项目列表\n    currentProjectId: <any>getCookie(\"PROJECT_ID\") || \"\", // 当前菜单\n    refreshTimer: <any>null,\n    manualRefresh: <boolean>false\n  }),\n  getters: {\n    // 获取菜单列表\n    getProjectList(): any {\n      return this.projectList;\n    },\n    getCurrentProjectId(): any {\n      return this.currentProjectId\n    },\n    getManualRefresh(): boolean {\n      return this.manualRefresh\n    }\n  },\n  actions: {\n    setCurrentProject(monitorAppId: string) {\n      this.currentProjectId = monitorAppId;\n      setCookie(\"PROJECT_ID\", monitorAppId);\n    },\n    /**\n     * 保存项目数据\n     * @param projectList\n     */\n    setProjectList(projectList: any) {\n      this.projectList = projectList;\n      setCookie(\"PROJECT_ALL\", JSON.stringify(projectList));\n      let currentProject = projectList[0]?.monitorAppId;\n      if (currentProject && !getCookie(\"PROJECT_ID\")) {\n        this.currentProjectId = currentProject;\n        setCookie(\"PROJECT_ID\", currentProject);\n      }\n    },\n    // 获取系统有效的应用\n    async getValidProject() {\n      let res = await projectAllList()\n      if (!res.success) {\n        return\n      }\n      this.setProjectList(res.model)\n    },\n    // 手动刷新\n\t\tsetManualRefresh() {\n\t\t\tif (this.refreshTimer) return;\n\t\t\tthis.manualRefresh = true;\n\t\t\tthis.refreshTimer = setTimeout(() => {\n\t\t\t\tthis.manualRefresh = false;\n\t\t\t\tthis.refreshTimer = null;\n\t\t\t\tclearTimeout(this.refreshTimer);\n\t\t\t}, 100);\n\t\t},\n  },\n});\n"],"names":["useGeneralStore","defineStore","id","state","projectList","getCookie","JSON","parse","currentProjectId","refreshTimer","manualRefresh","getters","getProjectList","this","getCurrentProjectId","getManualRefresh","actions","setCurrentProject","monitorAppId","setCookie","setProjectList","stringify","currentProject","_a","getValidProject","res","projectAllList","success","model","setManualRefresh","setTimeout","clearTimeout"],"mappings":"iIAGO,MAAMA,EAAkBC,EAAY,CACzCC,GAAI,cACJC,MAAO,KAAY,CACjBC,YAAkBC,EAAU,eAAiBC,KAAKC,MAAMF,EAAU,gBAAkB,MAAQ,GAC5FG,iBAAuBH,EAAU,eAAiB,GAClDI,aAAmB,KACnBC,eAAwB,IAE1BC,QAAS,CAEP,cAAAC,GACE,OAAOC,KAAKT,WACd,EACA,mBAAAU,GACE,OAAOD,KAAKL,gBACd,EACA,gBAAAO,GACE,OAAOF,KAAKH,aACd,GAEFM,QAAS,CACP,iBAAAC,CAAkBC,GAChBL,KAAKL,iBAAmBU,EACxBC,EAAU,aAAcD,EAC1B,EAKA,cAAAE,CAAehB,SACbS,KAAKT,YAAcA,EACnBe,EAAU,cAAeb,KAAKe,UAAUjB,IACpC,IAAAkB,EAAiB,OAAAC,EAAAnB,EAAY,SAAI,EAAAmB,EAAAL,aACjCI,IAAmBjB,EAAU,gBAC/BQ,KAAKL,iBAAmBc,EACxBH,EAAU,aAAcG,GAE5B,EAEA,qBAAME,GACA,IAAAC,QAAYC,IACXD,EAAIE,SAGJd,KAAAO,eAAeK,EAAIG,MAC1B,EAEF,gBAAAC,GACKhB,KAAKJ,eACTI,KAAKH,eAAgB,EAChBG,KAAAJ,aAAeqB,YAAW,KAC9BjB,KAAKH,eAAgB,EACrBG,KAAKJ,aAAe,KACpBsB,aAAalB,KAAKJ,aAAY,GAC5B,KACJ"}