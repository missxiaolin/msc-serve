{"version":3,"file":"tags-view-2e9f7189.js","sources":["../../src/config/layouts.ts","../../src/store/modules/settings.ts","../../src/components/themeSwitch/index.vue","../../src/store/modules/tags-view.ts"],"sourcesContent":["import { getConfigLayout } from \"@/utils/cache/local-storage\";\n\n/** 项目配置 */\nexport interface LayoutSettings {\n  /** 是否显示 Settings Panel */\n  showSettings: boolean;\n  /** 布局模式 */\n  layoutMode: \"left\" | \"top\" | \"left-top\";\n  /** 是否显示标签栏 */\n  showTagsView: boolean;\n  /** 是否显示 Logo */\n  showLogo: boolean;\n  /** 是否固定 Header */\n  fixedHeader: boolean;\n  /** 是否显示消息通知 */\n  showNotify: boolean;\n  /** 是否显示切换主题按钮 */\n  showThemeSwitch: boolean;\n  /** 是否显示全屏按钮 */\n  showScreenfull: boolean;\n  /** 是否缓存标签栏 */\n  cacheTagsView: boolean;\n  /** 是否显示灰色模式 */\n  showGreyMode: boolean;\n  /** 是否显示色弱模式 */\n  showColorWeakness: boolean;\n}\n\nexport const layoutSettings: LayoutSettings = getConfigLayout() ?? {\n  layoutMode: \"left\",\n  showSettings: true,\n  showTagsView: true,\n  fixedHeader: true,\n  showLogo: true,\n  showNotify: true,\n  showThemeSwitch: true,\n  showScreenfull: true,\n  cacheTagsView: false,\n  showGreyMode: false,\n  showColorWeakness: false,\n};\n","import { type Ref, ref, watch } from \"vue\";\nimport { defineStore } from \"pinia\";\nimport { type LayoutSettings, layoutSettings } from \"@/config/layouts\";\nimport { setConfigLayout } from \"@/utils/cache/local-storage\";\n\ntype SettingsStore = {\n  // 使用映射类型来遍历 layoutSettings 对象的键\n  [Key in keyof LayoutSettings]: Ref<LayoutSettings[Key]>;\n};\n\ntype SettingsStoreKey = keyof SettingsStore;\n\nexport const useSettingsStore = defineStore(\"settings\", () => {\n  /** 状态对象 */\n  const state = {} as SettingsStore;\n  // 遍历 layoutSettings 对象的键值对\n  for (const [key, value] of Object.entries(layoutSettings)) {\n    // 使用类型断言来指定 key 的类型，将 value 包装在 ref 函数中，创建一个响应式变量\n    const refValue = ref(value);\n    state[key as SettingsStoreKey] = refValue;\n    // 监听每个响应式变量\n    watch(refValue, () => {\n      // 缓存\n      const settings = _getCacheData();\n      setConfigLayout(settings);\n    });\n  }\n  /** 获取要缓存的数据：将 state 对象转化为 settings 对象 */\n  const _getCacheData = () => {\n    const settings = {} as LayoutSettings;\n    for (const [key, value] of Object.entries(state)) {\n      // @ts-ignore\n      settings[key as SettingsStoreKey] = value.value;\n    }\n    return settings;\n  };\n\n  return state;\n});\n","<template>\n  <el-dropdown trigger=\"click\" @command=\"setTheme\">\n    <div>\n      <el-tooltip effect=\"dark\" content=\"主题模式\" placement=\"bottom\">\n        <el-icon :size=\"20\">\n          <MagicStick />\n        </el-icon>\n      </el-tooltip>\n    </div>\n    <template #dropdown>\n      <el-dropdown-menu>\n        <el-dropdown-item\n          v-for=\"(theme, index) in themeList\"\n          :key=\"index\"\n          :disabled=\"activeThemeName === theme.name\"\n          :command=\"theme.name\"\n        >\n          <span>{{ theme.title }}</span>\n        </el-dropdown-item>\n      </el-dropdown-menu>\n    </template>\n  </el-dropdown>\n</template>\n\n<script lang=\"ts\">\nimport { useTheme } from \"@/hooks/useTheme\";\nimport { MagicStick } from \"@element-plus/icons-vue\";\n\nexport default {\n    setup() {\n        const { themeList, activeThemeName, setTheme } = useTheme();\n        return {\n            themeList,\n            activeThemeName,\n            setTheme,\n            MagicStick\n        }\n    }\n}\n</script>\n","import { ref, watchEffect } from \"vue\";\nimport { defineStore } from \"pinia\";\nimport { useSettingsStore } from \"./settings\";\nimport { type RouteLocationNormalized } from \"vue-router\";\nimport {\n  getVisitedViews,\n  setVisitedViews,\n  getCachedViews,\n  setCachedViews,\n} from \"@/utils/cache/local-storage\";\n\nexport type TagView = Partial<RouteLocationNormalized>;\n\nexport const useTagsViewStore = defineStore(\"tags-view\", () => {\n  const { cacheTagsView } = useSettingsStore();\n  const visitedViews = ref<TagView[]>(cacheTagsView ? getVisitedViews() : []);\n  const cachedViews = ref<string[]>(cacheTagsView ? getCachedViews() : []);\n\n  /** 缓存标签栏数据 */\n  watchEffect(() => {\n    setVisitedViews(visitedViews.value);\n    setCachedViews(cachedViews.value);\n  });\n\n  //#region add\n  const addVisitedView = (view: TagView) => {\n    // 检查是否已经存在相同的 visitedView\n    const index = visitedViews.value.findIndex((v) => v.path === view.path);\n    if (index !== -1) {\n      // 防止 query 参数丢失\n      visitedViews.value[index].fullPath !== view.fullPath &&\n        (visitedViews.value[index] = { ...view });\n    } else {\n      // 添加新的 visitedView\n      visitedViews.value.push({ ...view });\n    }\n  };\n\n  const addCachedView = (view: TagView) => {\n    if (typeof view.name !== \"string\") return;\n    if (cachedViews.value.includes(view.name)) return;\n    if (view.meta?.keepAlive) cachedViews.value.push(view.name);\n  };\n  //#endregion\n\n  //#region del\n  const delVisitedView = (view: TagView) => {\n    const index = visitedViews.value.findIndex((v) => v.path === view.path);\n    if (index !== -1) visitedViews.value.splice(index, 1);\n  };\n\n  const delCachedView = (view: TagView) => {\n    if (typeof view.name !== \"string\") return;\n    const index = cachedViews.value.indexOf(view.name);\n    if (index !== -1) cachedViews.value.splice(index, 1);\n  };\n  //#endregion\n\n  //#region delOthers\n  const delOthersVisitedViews = (view: TagView) => {\n    visitedViews.value = visitedViews.value.filter((v) => {\n      return v.meta?.affix || v.path === view.path;\n    });\n  };\n\n  const delOthersCachedViews = (view: TagView) => {\n    if (typeof view.name !== \"string\") return;\n    const index = cachedViews.value.indexOf(view.name);\n    if (index !== -1) {\n      cachedViews.value = cachedViews.value.slice(index, index + 1);\n    } else {\n      // 如果 index = -1, 没有缓存的 tags\n      cachedViews.value = [];\n    }\n  };\n  //#endregion\n\n  //#region delAll\n  const delAllVisitedViews = () => {\n    // 保留固定的 tags\n    visitedViews.value = visitedViews.value.filter((tag) => tag.meta?.affix);\n  };\n\n  const delAllCachedViews = () => {\n    cachedViews.value = [];\n  };\n  //#endregion\n\n  return {\n    visitedViews,\n    cachedViews,\n    addVisitedView,\n    addCachedView,\n    delVisitedView,\n    delCachedView,\n    delOthersVisitedViews,\n    delOthersCachedViews,\n    delAllVisitedViews,\n    delAllCachedViews,\n  };\n});\n"],"names":["layoutSettings","getConfigLayout","layoutMode","showSettings","showTagsView","fixedHeader","showLogo","showNotify","showThemeSwitch","showScreenfull","cacheTagsView","showGreyMode","showColorWeakness","useSettingsStore","defineStore","state","key","value","Object","entries","refValue","ref","watch","settings","_getCacheData","setConfigLayout","setup","themeList","activeThemeName","setTheme","useTheme","MagicStick","_resolveComponent","_openBlock","_createBlock","_component_el_dropdown","trigger","onCommand","$setup","dropdown","_withCtx","_createVNode","_component_el_dropdown_menu","default","_createElementBlock","_Fragment","_renderList","theme","index","_component_el_dropdown_item","disabled","name","_createElementVNode","_component_el_tooltip","effect","content","_component_el_icon","size","useTagsViewStore","visitedViews","getVisitedViews","cachedViews","getCachedViews","watchEffect","setVisitedViews","setCachedViews","addVisitedView","view","findIndex","v","path","fullPath","push","addCachedView","includes","_a","meta","keepAlive","delVisitedView","splice","delCachedView","indexOf","delOthersVisitedViews","filter","affix","delOthersCachedViews","slice","delAllVisitedViews","tag","delAllCachedViews"],"mappings":"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"}